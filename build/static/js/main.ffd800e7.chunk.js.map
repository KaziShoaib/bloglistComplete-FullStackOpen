{"version":3,"sources":["services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/BlogList.js","components/Blog.js","components/Notification.js","services/login.js","reducers/userReducer.js","hooks/index.js","components/LoginForm.js","components/BlogForm.js","services/userList.js","reducers/usersListReducer.js","components/UserList.js","components/User.js","App.js","store.js","index.js"],"names":["token","getAll","a","axios","get","response","data","setToken","nowToken","create","blogObject","config","headers","Authorization","post","update","id","newObject","put","deleteBlog","delete","emptyNotification","successMessage","errorMessage","timeoutID","createNotification","notificationType","message","waitingTime","dispatch","clearTimeout","type","setTimeout","notificationReducer","state","action","createNewBlog","userData","blogService","returnedBlog","modifiedReturnedBlog","user","username","name","toString","title","author","error","removeBlog","blogReducer","filter","blog","map","likes","newComment","comments","BlogList","blogs","useSelector","useDispatch","sortBlogs","sortedBlogs","sort","bloga","blogb","sortBlogsByLike","className","onClick","Table","bordered","key","to","Blog","history","useHistory","useParams","find","b","showDeleteButton","display","handleDelete","window","confirm","push","addLike","likeObject","addLikeTo","addComment","event","preventDefault","target","comment","value","commentsObject","addCommentTo","href","url","style","onSubmit","Notification","notifications","Alert","variant","login","credential","initialUserData","loggedUserDataJSON","localStorage","getItem","JSON","parse","loginUser","userCredentials","loginService","setItem","stringify","userReducer","useField","useState","setValue","field","onChange","reset","LoginForm","resetUsername","password","resetPassword","sendUserCredentials","Form","Group","Label","Control","Button","BlogForm","resetTitle","resetAuthor","resetUrl","dispalayFormFlag","setDisplayFormFlag","hideWhenDisplayed","showWhenDisplayed","toggleDisplayFormFlag","sendNewBlog","initializeUserList","userListService","userList","userListReducer","UserList","useEffect","length","User","u","App","userDataFromLocalStorage","initializeUser","console","log","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","removeItem","exact","path","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffd800e7.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\n//this function is called from app.js when someone logs in with token returned from backend\r\nconst setToken = nowToken => {\r\n  token = `bearer ${nowToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\n\r\nconst create = async (blogObject) => {\r\n  const config = {\r\n    headers : { Authorization : token }\r\n  };\r\n  //config parameter will set an Authorization header in the request\r\n  const response = await axios.post(baseUrl, blogObject, config);\r\n  return response.data;\r\n};\r\n\r\n\r\nconst update = async (id, newObject) => {\r\n  let response = await axios.put(`${baseUrl}/${id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\n\r\nconst deleteBlog = async(id) => {\r\n  const config = {\r\n    headers : { Authorization : token }\r\n  };\r\n  //config parameter will set an Authorization header in the request\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, setToken, create, update, deleteBlog };","const emptyNotification = { successMessage : null, errorMessage : null };\r\n\r\nconst notificationReducer = (state = emptyNotification, action ) => {\r\n  switch(action.type){\r\n    case 'SET_SUCCESS_MESSAGE':\r\n      return { ...state, successMessage : action.message };\r\n    case 'SET_ERROR_MESSAGE':\r\n      return { ...state, errorMessage : action.message };\r\n    case 'CLEAR_ALL':\r\n      return emptyNotification;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nlet timeoutID = null;\r\n\r\nexport const createNotification = (notificationType, message, waitingTime) => {\r\n  return async dispatch => {\r\n    if(timeoutID !== null){\r\n      clearTimeout(timeoutID);\r\n    }\r\n    const actionType = notificationType === 'success' ? 'SET_SUCCESS_MESSAGE' : 'SET_ERROR_MESSAGE';\r\n    dispatch({\r\n      type: actionType,\r\n      message: message\r\n    });\r\n    timeoutID = setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_ALL'\r\n      });\r\n    }, waitingTime);\r\n  };\r\n};\r\n\r\nexport default notificationReducer;\r\n\r\n","import blogService from '../services/blogs';\r\nimport { createNotification } from './notificationReducer';\r\n\r\nconst blogReducer = (state=[], action) => {\r\n  switch(action.type){\r\n    case 'INIT_BLOGS':\r\n    case 'SORT_BLOGS':\r\n      return action.data;\r\n    case 'ADD_NEW_BLOG':\r\n      return [...state, action.data];\r\n    case 'DELETE_BLOG': {\r\n      const id = action.data.id;\r\n      return state.filter(blog => blog.id !== id);\r\n    }\r\n    case 'INCREMENT_LIKES': {\r\n      const id = action.data.id;\r\n      return state.map(blog =>\r\n        blog.id === id ? { ...blog, likes: blog.likes+1 } : blog);\r\n    }\r\n    case 'ADD_COMMENT' : {\r\n      const id = action.data.id;\r\n      const newComment = action.data.newComment;\r\n      return state.map(blog =>\r\n        blog.id === id ?\r\n          { ...blog, comments : [...blog.comments, newComment] }\r\n          : blog);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll();\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const createNewBlog = (blogObject, userData) => {\r\n  return async dispatch => {\r\n    try {\r\n      const returnedBlog = await blogService.create(blogObject);\r\n      const modifiedReturnedBlog = {\r\n        ...returnedBlog,\r\n        user : {\r\n          username:userData.username,\r\n          name:userData.name,\r\n          id: returnedBlog.user.toString()\r\n        }\r\n      };\r\n      dispatch({\r\n        type: 'ADD_NEW_BLOG',\r\n        data: modifiedReturnedBlog\r\n      });\r\n      dispatch(createNotification('success', `a new blog ${returnedBlog.title} by ${returnedBlog.author} added`, 5000));\r\n    } catch(exception){\r\n      dispatch(createNotification('error', exception.response.data.error, 5000));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const addCommentTo = (id, blogObject, newComment) => {\r\n  return async dispatch => {\r\n    try {\r\n      const commentsObject = { comments: [...blogObject.comments, newComment] };\r\n      await blogService.update(id, commentsObject);\r\n      dispatch({\r\n        type: 'ADD_COMMENT',\r\n        data: {\r\n          id: id,\r\n          newComment : newComment\r\n        }\r\n      });\r\n    } catch(exception) {\r\n      dispatch(createNotification('error', `Blog ${blogObject.title} has been deleted`, 5000));\r\n      dispatch({\r\n        type : 'DELETE_BLOG',\r\n        data : { id }\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addLikeTo = (id, blogObject) => {\r\n  return async dispatch => {\r\n    try {\r\n      const likeObject = {  likes: blogObject.likes + 1 };\r\n      await blogService.update(id, likeObject);\r\n      dispatch({\r\n        type : 'INCREMENT_LIKES',\r\n        data : { id }\r\n      });\r\n    } catch(exception) {\r\n      dispatch(createNotification('error', `Blog ${blogObject.title} has been deleted`, 5000));\r\n      dispatch({\r\n        type : 'DELETE_BLOG',\r\n        data : { id }\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const removeBlog = (id) => {\r\n  return async dispatch => {\r\n    try {\r\n      await blogService.deleteBlog(id);\r\n      dispatch({\r\n        type: 'DELETE_BLOG',\r\n        data : { id }\r\n      });\r\n      dispatch(createNotification('success', 'the blog has been successfully deleted', 5000));\r\n    } catch(exception) {\r\n      dispatch(createNotification('error', exception.data.error.message, 5000));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const sortBlogsByLike = (blogs) => {\r\n  return async dispatch => {\r\n    const sortedBlogs = [...blogs].sort((bloga, blogb) => blogb.likes - bloga.likes);\r\n    dispatch({\r\n      type : 'SORT_BLOGS',\r\n      data : sortedBlogs\r\n    });\r\n  };\r\n};\r\n\r\nexport default blogReducer;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nimport { sortBlogsByLike } from '../reducers/blogReducer';\r\n//import '../index.css';\r\n\r\n\r\nconst BlogList = () => {\r\n  const blogs = useSelector(state => state.blogs);\r\n  const dispatch = useDispatch();\r\n\r\n  const sortBlogs = (blogs) => {\r\n    dispatch(sortBlogsByLike(blogs));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className='btn btn-primary my-3' id='sort-button' onClick={() => sortBlogs(blogs)}>Sort by Likes</button>\r\n      <h2 className='text-primary'>BLOGS</h2>\r\n      <Table bordered className='my-5'>\r\n        <thead>\r\n          <th>Title</th>\r\n          <th>Author</th>\r\n          <th>Likes</th>\r\n        </thead>\r\n        <tbody>\r\n          {blogs.map(blog =>\r\n            <tr key={blog.id}>\r\n              <td>\r\n                <Link to={`/blogs/${blog.id}`} className='blog-title'>{blog.title}</Link>\r\n              </td>\r\n              <td>\r\n                {blog.author}\r\n              </td>\r\n              <td>\r\n                {blog.likes}\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { removeBlog, addLikeTo, addCommentTo } from '../reducers/blogReducer';\r\nimport '../index.css';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nconst Blog = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const id = useParams().id;\r\n  const blogs = useSelector(state => state.blogs);\r\n  const blog = blogs.find(b => b.id === id);\r\n\r\n  const userData = useSelector(state => state.userData);\r\n\r\n  //this condition is for helpint with delete, more in the handDelete function\r\n  if(!userData || !blog)\r\n    return null;\r\n\r\n\r\n  let showDeleteButton = { display : 'none' };\r\n  if(userData){\r\n    const userIsTheCreator = blog.user.username === userData.username;\r\n    if(userIsTheCreator){\r\n      showDeleteButton = { display : '' };\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    if(window.confirm(`Do you want to delete ${blog.title}?`)){\r\n      await dispatch(removeBlog(id));\r\n      history.push('/');\r\n      //this line does not work\r\n      // after deleting instead of going back to home page\r\n      // this component is reloaded\r\n      // to prevent that an if condition is added above\r\n      // that checks if the userData or blog does not exist null is returned\r\n    }\r\n  };\r\n\r\n  const addLike = (id, blogObject) => {\r\n    dispatch(addLikeTo(id, blogObject));\r\n  };\r\n\r\n  const addComment = (event) => {\r\n    event.preventDefault();\r\n    const newComment = event.target.comment.value;\r\n    event.target.comment.value = '';\r\n    dispatch(addCommentTo(blog.id, blog, newComment));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4 className='mt-3'>\r\n        {blog.title} <em>{blog.author}</em>\r\n      </h4>\r\n      <p>\r\n        <a href={blog.url}>{blog.url}</a>\r\n      </p>\r\n      <p>\r\n        Likes <span className='like-count'>{blog.likes}</span> <button onClick={() => addLike(blog.id, blog)} className='like-button'>Like</button>\r\n      </p>\r\n      <p>\r\n        Added by {blog.user.name}\r\n      </p>\r\n      <button style={showDeleteButton} className='delete-button' onClick={() => handleDelete(blog.id)}>Delete</button>\r\n      <div>\r\n        <form onSubmit={(event) => addComment(event)}>\r\n          <input type='text' name='comment' />\r\n          <button type='submit'>Add a comment</button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <h4>comments</h4>\r\n        <ul>\r\n          {blog.comments.map(comment => <li key={comment}>{comment}</li>)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Alert } from 'react-bootstrap';\r\n//import '../index.css';\r\n\r\nconst Notification = () => {\r\n  const { successMessage, errorMessage } = useSelector(state => state.notifications);\r\n  if(successMessage){\r\n    return (\r\n      <Alert variant='success'>\r\n        {successMessage}\r\n      </Alert>\r\n    );\r\n  }\r\n  if(errorMessage){\r\n    return (\r\n      <Alert variant='danger'>\r\n        {errorMessage}\r\n      </Alert>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Notification;","import axios from 'axios';\r\nconst baseURL = '/api/login';\r\n\r\n\r\nconst login = async (credential) => {\r\n  const response = await axios.post(baseURL, credential);\r\n  return response.data;\r\n};\r\n\r\n\r\nexport default { login };","import loginService from '../services/login';\r\nimport blogService from '../services/blogs';\r\nimport { createNotification } from './notificationReducer';\r\n\r\n\r\n//App sometimes loads before the useEffect for user initialization is finished\r\n//these lines here do the exact things as that useEffect function\r\nlet initialUserData = null;\r\nconst loggedUserDataJSON = window.localStorage.getItem('loggedBlogappUser');\r\nif(loggedUserDataJSON){\r\n  initialUserData = JSON.parse(loggedUserDataJSON);\r\n  blogService.setToken(initialUserData.token);\r\n}\r\n\r\nconst userReducer = (state = initialUserData, action) => {\r\n  switch(action.type) {\r\n    case 'INIT_USER' :\r\n    case 'SET_USER' :\r\n      return action.data;\r\n    case 'CLEAR_USER':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const loginUser = ( userCredentials ) => {\r\n  return async dispatch => {\r\n    try {\r\n      const userData = await loginService.login(userCredentials);\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(userData)\r\n      );\r\n      dispatch({\r\n        type : 'SET_USER',\r\n        data : userData\r\n      });\r\n      blogService.setToken(userData.token);\r\n      dispatch(createNotification('success', 'Login Successful', 5000));\r\n    } catch(exception) {\r\n      dispatch(createNotification('error', 'Invalid username or password', 5000));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const logoutUser = () => {\r\n  return async dispatch => {\r\n    window.localStorage.removeItem('loggedBlogappUser');\r\n    dispatch({\r\n      type: 'CLEAR_USER'\r\n    });\r\n    blogService.setToken(null);\r\n    dispatch(createNotification('success', 'Logout Successful', 500));\r\n  };\r\n};\r\n\r\n\r\nexport const initializeUser = (userData) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type : 'INIT_USER',\r\n      data: userData\r\n    });\r\n    blogService.setToken(userData.token);\r\n  };\r\n};\r\n\r\nexport default userReducer;","import { useState } from 'react';\r\n\r\nexport const useField = (type) => {\r\n  const [ value, setValue ] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n\r\n  return {\r\n    field: {\r\n      value,\r\n      type,\r\n      onChange\r\n    },\r\n    reset\r\n  };\r\n\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { loginUser } from '../reducers/userReducer';\r\nimport { useField } from '../hooks';\r\n//import '../index.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n//this component creates it's own states\r\n\r\nconst LoginForm = () => {\r\n\r\n  const { field: username, reset: resetUsername } = useField('text');\r\n  const { field: password, reset: resetPassword } = useField('password');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //this function should be async and await the handleLogin function\r\n  const sendUserCredentials = async (event) => {\r\n    event.preventDefault();\r\n    const userCredentials = { username: username.value, password: password.value };\r\n    await dispatch(loginUser(userCredentials));\r\n    history.push('/');\r\n    resetUsername();\r\n    resetPassword();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='text-primary'>Log in to application</h2>\r\n      <Form onSubmit={sendUserCredentials}>\r\n        {/* the ids are given for test purpose */}\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Username\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"Username\"\r\n            id=\"username\"\r\n            { ...username }\r\n          />\r\n          <Form.Label>\r\n            Password\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"Password\"\r\n            id='password'\r\n            { ...password }\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            login\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n      {/* <form onSubmit={sendUserCredentials}>\r\n        <div>\r\n          Username:\r\n          <input\r\n            name=\"Username\"\r\n            id=\"username\"\r\n            { ...username }\r\n          />\r\n        </div>\r\n        <div>\r\n          Password:\r\n          <input\r\n            name=\"Password\"\r\n            id='password'\r\n            { ...password }\r\n          />\r\n        </div>\r\n        <button id='login-button' type=\"submit\">Log in</button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { createNewBlog } from '../reducers/blogReducer';\r\nimport { useField } from '../hooks';\r\nimport { Form } from 'react-bootstrap';\r\n//import '../index.css';\r\n\r\n//this component creates it's own states\r\n\r\n\r\nconst BlogForm = () => {\r\n  const { field: title, reset: resetTitle } = useField('text');\r\n  const { field: author, reset: resetAuthor } = useField('text');\r\n  const { field: url, reset: resetUrl } = useField('text');\r\n  const [dispalayFormFlag, setDisplayFormFlag] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector(state => state.userData);\r\n\r\n  const hideWhenDisplayed = { display : dispalayFormFlag ? 'none' : '' };\r\n  const showWhenDisplayed = { display : dispalayFormFlag ? '' : 'none' };\r\n\r\n  const toggleDisplayFormFlag = () => setDisplayFormFlag(!dispalayFormFlag);\r\n\r\n  const sendNewBlog = async (event) => {\r\n    event.preventDefault();\r\n    const blogObject = { title: title.value, author: author.value, url: url.value };\r\n    await dispatch(createNewBlog(blogObject, userData));\r\n    resetTitle();\r\n    resetAuthor();\r\n    resetUrl();\r\n    toggleDisplayFormFlag();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenDisplayed}>\r\n        <button className='btn btn-primary mt-3' onClick={toggleDisplayFormFlag}>Add a Blog</button>\r\n      </div>\r\n      <div style={showWhenDisplayed}>\r\n        <h2 className='text-primary'>Add a new blog</h2>\r\n        <Form onSubmit={sendNewBlog}>\r\n          {/* the ids are given to input fields for testing purpose */}\r\n          <Form.Label>\r\n            Title\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"Title\"\r\n            id='title'\r\n            {...title}\r\n          />\r\n          <Form.Label>\r\n            Author\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"Author\"\r\n            id='author'\r\n            {...author}\r\n          />\r\n          <Form.Label>\r\n            URL\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"URL\"\r\n            id='url'\r\n            {...url}\r\n          />\r\n          <button\r\n            className='btn btn-warning mr-2 my-2' onClick={toggleDisplayFormFlag} type='button'>cancel</button>\r\n          <button className='btn btn-primary my-2' id='submit-blog-button' type='submit'>create</button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogForm;","import axios from 'axios';\r\nconst baseUrl = '/api/users';\r\n\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll };","import userListService from '../services/userList';\r\n\r\n\r\nconst userListReducer = (state=[], action) => {\r\n  switch(action.type) {\r\n    case 'INIT_USERS':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const initializeUserList = () => {\r\n  return async dispatch => {\r\n    const userList = await userListService.getAll();\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: userList\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport default userListReducer;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\nimport { initializeUserList } from '../reducers/usersListReducer';\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeUserList());\r\n  }, [dispatch]);\r\n\r\n  const userList = useSelector(state => state.userList);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='text-primary mt-3'>Users</h2>\r\n      <Table bordered className='mt-3'>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Blogs Added</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userList.map( user =>\r\n            <tr key={user.id}>\r\n              <td><Link to={`/users/${user.id}`}>{user.name}</Link></td>\r\n              <td>{user.blogs.length}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { initializeUserList } from '../reducers/usersListReducer';\r\n\r\n\r\n\r\nconst User = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeUserList());\r\n  }, [dispatch]);\r\n\r\n  const userList = useSelector(state => state.userList);\r\n  const id = useParams().id;\r\n  const user = userList.find(u => u.id === id);\r\n\r\n  if(!user){\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='text-info mt-3'>{user.name}</h2>\r\n      <h4 className='text-info mt-3'>Added Blogs</h4>\r\n      <ul className='list-group mt-3'>\r\n        {user.blogs.map(blog => <li key={blog.id} className='list-group-item'>{blog.title}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default User;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector  } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from 'react-router-dom';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\n\r\n\r\nimport BlogList from './components/BlogList';\r\nimport Blog from './components/Blog';\r\nimport Notification from './components/Notification';\r\nimport LoginForm from './components/LoginForm';\r\nimport BlogForm from './components/BlogForm';\r\nimport UserList from './components/UserList';\r\nimport User from './components/User';\r\n\r\n\r\nimport { initializeBlogs } from './reducers/blogReducer';\r\nimport { initializeUser  } from './reducers/userReducer';\r\nimport { logoutUser } from './reducers/userReducer';\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs());\r\n  }, [dispatch]);\r\n\r\n\r\n  //App starts loading before useEffect() is completed\r\n  //this exact same tasks have been repeated on top of userReducer\r\n  //technically this useEffect() is not necessary\r\n  useEffect(() => {\r\n    //searching for log in info in the local storage\r\n    const loggedUserDataJSON = window.localStorage.getItem('loggedBlogappUser');\r\n    if(loggedUserDataJSON){\r\n      //userData contains the token, username and name\r\n      const userDataFromLocalStorage = JSON.parse(loggedUserDataJSON);\r\n      //the dispathed action will also set the token in the blogService variable\r\n      dispatch(initializeUser(userDataFromLocalStorage));\r\n    }\r\n  }, [dispatch]);\r\n\r\n\r\n  const userData = useSelector(state => state.userData);\r\n  console.log('userData from app component',userData);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  return (\r\n\r\n    <div className='container'>\r\n      <Notification />\r\n      <Router>\r\n        {userData ?\r\n          <Navbar collapseOnSelect expand='lg' variant='dark' bg='primary'>\r\n            <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n            <Navbar.Collapse id='responsive-navbar-nav'>\r\n              <Nav className='mr-auto'>\r\n                <Nav.Link href='#' as='span'>\r\n                  <Button>\r\n                    <Link to='/' className='text-white'>All Blogs</Link>\r\n                  </Button>\r\n                </Nav.Link>\r\n                <Nav.Link href='#' as='span'>\r\n                  <Button>\r\n                    <Link to='/users' className='text-white'>All Users</Link>\r\n                  </Button>\r\n                </Nav.Link>\r\n                <Nav.Link href='#' as='span'>\r\n                  <Button>\r\n                    <em>{userData.name} logged in</em>\r\n                  </Button>\r\n                </Nav.Link>\r\n                <Nav.Link href='#' as='span'>\r\n                  <Button onClick={handleLogout}>\r\n                    Log Out\r\n                  </Button>\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>  :\r\n          <div></div>\r\n        }\r\n\r\n        <Switch>\r\n          <Route exact path = '/blogs/:id'>\r\n            {userData ? <Blog /> : <Redirect to='/login' />}\r\n          </Route>\r\n          <Route exact path='/users/:id'>\r\n            {userData ? <User /> : <Redirect to='/login' />}\r\n          </Route>\r\n          <Route exact path='/users'>\r\n            {userData ? <UserList/> : <Redirect to='/login' />}\r\n          </Route>\r\n          <Route exact path ='/login' >\r\n            { userData ? <Redirect to='/' /> : <LoginForm />}\r\n          </Route>\r\n          <Route exact path = '/'>\r\n            { userData ?\r\n              <div>\r\n                <BlogForm />\r\n                <BlogList />\r\n              </div>\r\n              : <Redirect to='/login' /> }\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport blogReducer from './reducers/blogReducer';\r\nimport userReducer from './reducers/userReducer';\r\nimport userListReducer from './reducers/usersListReducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n  notifications: notificationReducer,\r\n  blogs: blogReducer,\r\n  userData : userReducer,\r\n  userList : userListReducer\r\n});\r\n\r\nconst store = createStore( reducers, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root')\r\n);"],"sourceRoot":""}